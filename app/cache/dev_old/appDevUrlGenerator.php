<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),),
        'pidev_graphe_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Pidev\\GrapheBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),),
        '_graphePie' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\GrapheBundle\\Controller\\GrapheController::chartPieAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pie',    ),  ),  4 =>   array (  ),),
        '_grapheHistogramme' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\GrapheBundle\\Controller\\GrapheController::chartHistogrammeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/histogramme',    ),  ),  4 =>   array (  ),),
        'pidev_user_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Pidev\\UserBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),),
        'homeadmin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\ReclamationController::noteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/home',    ),  ),  4 =>   array (  ),),
        'ajoutAdmin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\AdministrateurController::ajoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/ajout',    ),  ),  4 =>   array (  ),),
        'updatAdmin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\AdministrateurController::updatAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/updat',    ),  ),  4 =>   array (  ),),
        'deleteAdmin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\AdministrateurController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/delete',    ),  ),  4 =>   array (  ),),
        'listeAdmin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\AdministrateurController::ListeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/Liste',    ),  ),  4 =>   array (  ),),
        'rechercheAdmin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\AdministrateurController::rechercheAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/recherche',    ),  ),  4 =>   array (  ),),
        'ajoutBaby' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\BabysitterController::ajoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/baby/ajoutb',    ),  ),  4 =>   array (  ),),
        'updateBaby' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\BabysitterController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/updateb',    ),  ),  4 =>   array (  ),),
        'deleteBaby' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\BabysitterController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/deleteb',    ),  ),  4 =>   array (  ),),
        'listeBaby' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\BabysitterController::listeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/admin/listeb',    ),  ),  4 =>   array (  ),),
        'showBaby' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\BabysitterController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/admin/show',    ),  ),  4 =>   array (  ),),
        'rechercheBaby' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\BabysitterController::rechercheAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/rechb',    ),  ),  4 =>   array (  ),),
        'profilBaby' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\BabysitterController::profileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/admin/profil',    ),  ),  4 =>   array (  ),),
        'generateBaby' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\BabysitterController::generateBabyAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/generateBaby',    ),  ),  4 =>   array (  ),),
        'ajoutparent' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\ParentsController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/ajoutp',    ),  ),  4 =>   array (  ),),
        'parents_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\ParentsController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/showp',    ),  ),  4 =>   array (  ),),
        'parents_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\ParentsController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/editp',    ),  ),  4 =>   array (  ),),
        'parents_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\ParentsController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/delete',    ),  ),  4 =>   array (  ),),
        'parents_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\ParentsController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/new',    ),  ),  4 =>   array (  ),),
        'generateParent' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\ParentsController::generateParentAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/generateParent',    ),  ),  4 =>   array (  ),),
        'listeReclamation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\ReclamationController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/listrec',    ),  ),  4 =>   array (  ),),
        'deleteReclamation' => array (  0 =>   array (    0 => 'idreclamation',  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\ReclamationController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idreclamation',    ),    1 =>     array (      0 => 'text',      1 => '/back/deleterec',    ),  ),  4 =>   array (  ),),
        'pidevback_ajout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\ServiceController::addServiceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/ajoutService',    ),  ),  4 =>   array (  ),),
        'pidevback_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\ServiceController::deleteServiceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/supprimerService',    ),  ),  4 =>   array (  ),),
        'pidevback_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\ServiceController::updateServiceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/updateService',    ),  ),  4 =>   array (  ),),
        'pidevback_listCategories' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\CategorieController::listCategoriesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/listeCategories',    ),  ),  4 =>   array (  ),),
        'pidevback_ajoutCategorie' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\CategorieController::addCategorieAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/ajoutCategorie',    ),  ),  4 =>   array (  ),),
        'pidevback_deleteCategorie' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\CategorieController::deleteCategorieAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/supprimerCategorie',    ),  ),  4 =>   array (  ),),
        'pidevback_updateCategorie' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\CategorieController::updateCategorieAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/back/updateCategorie',    ),  ),  4 =>   array (  ),),
        'pidevback_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\ServiceController::listServicesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/listeServices',    ),  ),  4 =>   array (  ),),
        'listEvenement' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\EvenementController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/listeven',    ),  ),  4 =>   array (  ),),
        'ajoutEvenement' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\EvenementController::ajoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/addeven',    ),  ),  4 =>   array (  ),),
        'deleteEvenement' => array (  0 =>   array (    0 => 'idevenement',  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\EvenementController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idevenement',    ),    1 =>     array (      0 => 'text',      1 => '/back/deleteven',    ),  ),  4 =>   array (  ),),
        'updateEvenement' => array (  0 =>   array (    0 => 'idevenement',  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\EvenementController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idevenement',    ),    1 =>     array (      0 => 'text',      1 => '/back/update',    ),  ),  4 =>   array (  ),),
        'ajoutGarderie' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\GarderieController::ajoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/addgard',    ),  ),  4 =>   array (  ),),
        'listGarderie' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\GarderieController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/listegard',    ),  ),  4 =>   array (  ),),
        'deleteGarderie' => array (  0 =>   array (    0 => 'idgarderie',  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\GarderieController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idgarderie',    ),    1 =>     array (      0 => 'text',      1 => '/back/deletegard',    ),  ),  4 =>   array (  ),),
        'ajoutImage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\EvenementController::uploadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/back/ajoutimage',    ),  ),  4 =>   array (  ),),
        'updateGarderie' => array (  0 =>   array (    0 => 'idgarderie',  ),  1 =>   array (    '_controller' => 'Pidev\\backBundle\\Controller\\GarderieController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idgarderie',    ),    1 =>     array (      0 => 'text',      1 => '/back/updategard',    ),  ),  4 =>   array (  ),),
        'pidev_front_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\FrontBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/front/hello',    ),  ),  4 =>   array (  ),),
        'pidev_backBundle_List' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\FrontBundle\\Controller\\OffreMissionController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/front/listOffre',    ),  ),  4 =>   array (  ),),
        'pidev_backBundle_generate' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\FrontBundle\\Controller\\OffreMissionController::generatePdfAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/front/generate',    ),  ),  4 =>   array (  ),),
        'pidev_backBundle_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\FrontBundle\\Controller\\OffreMissionController::ajoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/front/addOffre',    ),  ),  4 =>   array (  ),),
        'pidev_backBundle_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Pidev\\FrontBundle\\Controller\\OffreMissionController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/front/deleteOffre',    ),  ),  4 =>   array (  ),),
        'Update_Offre' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Pidev\\FrontBundle\\Controller\\OffreMissionController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/front/UpdateOffre',    ),  ),  4 =>   array (  ),),
        'pidevFront_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\FrontBundle\\Controller\\ServiceController::listServicesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/front/listeServices',    ),  ),  4 =>   array (  ),),
        'pidevFront_choisir' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Pidev\\FrontBundle\\Controller\\ServiceParentController::choisirServiceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/front/choisirFront',    ),  ),  4 =>   array (  ),),
        'pdf_Offre2' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Pidev\\FrontBundle\\Controller\\OffreMissionController::helloAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/front/pdf2',    ),  ),  4 =>   array (  ),),
        'my_image' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\FrontBundle\\Controller\\ImageController::uploadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/front/up2',    ),  ),  4 =>   array (  ),),
        'my_image_route' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Pidev\\FrontBundle\\Controller\\ImageController::photoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/front/up',    ),  ),  4 =>   array (  ),),
        'list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\FrontBundle\\Controller\\RechercheController::listeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/front/list',    ),  ),  4 =>   array (  ),),
        'rech' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\FrontBundle\\Controller\\RechercheController::rechercheAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/front/rech',    ),  ),  4 =>   array (  ),),
        'listeGarderie' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\FrontBundle\\Controller\\GarderieController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/front/listegarderie',    ),  ),  4 =>   array (  ),),
        'profilBabyFront' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\FrontBundle\\Controller\\BabysitterController::profileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/front/baby/profil',    ),  ),  4 =>   array (  ),),
        'ajoutBabyFront' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\FrontBundle\\Controller\\BabysitterController::ajoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/front/baby/ajoutbaby',    ),  ),  4 =>   array (  ),),
        'listeBabyFront' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Pidev\\FrontBundle\\Controller\\BabysitterController::listeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/front/baby/listeb',    ),  ),  4 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::checkAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::showAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmedAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::requestAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::sendEmailAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::resetAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ChangePasswordController::changePasswordAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),),
        '_welcome' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\WelcomeController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),),
        '_demo_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/secured/login',    ),  ),  4 =>   array (  ),),
        '_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::securityCheckAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/secured/login_check',    ),  ),  4 =>   array (  ),),
        '_demo_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/secured/logout',    ),  ),  4 =>   array (  ),),
        'acme_demo_secured_hello' => array (  0 =>   array (  ),  1 =>   array (    'name' => 'World',    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::helloAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/secured/hello',    ),  ),  4 =>   array (  ),),
        '_demo_secured_hello' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::helloAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/demo/secured/hello',    ),  ),  4 =>   array (  ),),
        '_demo_secured_hello_admin' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::helloadminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/demo/secured/hello/admin',    ),  ),  4 =>   array (  ),),
        '_demo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\DemoController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/',    ),  ),  4 =>   array (  ),),
        '_demo_hello' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\DemoController::helloAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/demo/hello',    ),  ),  4 =>   array (  ),),
        '_demo_contact' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\DemoController::contactAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/contact',    ),  ),  4 =>   array (  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens);
    }
}
